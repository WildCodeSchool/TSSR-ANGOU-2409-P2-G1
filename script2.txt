function Gestion-Alimentation {
    Clear-Host
    Write-Host "
=========================================================
|               Gestion de l'alimentation               |
=========================================================
|     1 - Arrêter l'ordinateur                          |
|     2 - Redémarrer l'ordinateur                       |
|     3 - Verrouiller l'ordinateur                      |
|     X - Menu précédent                                |
=========================================================
"
    $choix = Read-Host "Faites votre choix"

    switch ($choix) {
        1 {
            $confirm = Read-Host "Êtes-vous sûr de vouloir arrêter l'ordinateur ? (o/n)"
            if ($confirm -match '^(o|O)$') {
                $log = "$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - $env:USERNAME - Ordinateur - Action - Arrêt Ordinateur"
                Add-Content -Path "C:\Logs\log_evt.txt" -Value $log
                Stop-Computer -Force
            } else {
                Write-Host "Action annulée."
                Start-Sleep -Seconds 1
                Gestion-Alimentation
            }
        }
        2 {
            $confirm = Read-Host "Êtes-vous sûr de vouloir redémarrer l'ordinateur ? (o/n)"
            if ($confirm -match '^(o|O)$') {
                $log = "$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - $env:USERNAME - Ordinateur - Action - Redémarrage Ordinateur"
                Add-Content -Path "C:\Logs\log_evt.txt" -Value $log
                Restart-Computer -Force
            } else {
                Write-Host "Action annulée."
                Start-Sleep -Seconds 1
                Gestion-Alimentation
            }
        }
        3 {
            $log = "$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - $env:USERNAME - Ordinateur - Action - Verrouillage Ordinateur"
            Add-Content -Path "C:\Logs\log_evt.txt" -Value $log
            rundll32.exe user32.dll, LockWorkStation
        }
        { "x"; "X" } {
            $log = "$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - $env:USERNAME - Retour au menu précédent"
            Add-Content -Path "C:\Logs\log_evt.txt" -Value $log
            Write-Host "Retour au menu précédent." # Ajoute la commande pour aller au menu précédent ici
        }
        default {
            Write-Host "Option invalide. Veuillez réessayer."
            Start-Sleep -Seconds 1
            Gestion-Alimentation
        }
    }
}

______________________________________________________________________________________________________________________________________________________________________________
function gestion_directory {
    Clear-Host
    Write-Output "=================================="
    Write-Output "|     Gestion des répertoires    |"
    Write-Output "=================================="
    Write-Output "| 1 - Création de répertoire     |"
    Write-Output "| 2 - Modification de répertoire |"
    Write-Output "| 3 - Suppression de répertoire  |"
    Write-Output "| x - Menu précédent             |"
    Write-Output "=================================="
    
    $Choix_Directory = Read-Host "Faites votre choix : "
  
    switch ($Choix_Directory) {
  
      1 {$pathdir = Read-Host "Quel est le chemin du dossier que vous souhaitez créer ?" ; 
      $directory = Read-Host "Quel dossier souhaitez-vous créer à partir de $pathdir ?" ; 
      New-Item -Path $pathdir\ -ItemType Directory -Name $directory ;
      Write-Output "Création de $directory effectuée."}
      
      2 {$pathdir = Read-Host "Quel est le chemin du dossier que vous souhaitez modifier ?" ;
      $directory = Read-Host "Quel est le nom du dossier que vous souhaitez modifier ?" ;
      $dir_name = Read-Host "Quel nouveau nom souhaitez lui donner ?" ;
      Rename-Item -Path $pathdir\$directory -NewName $dir_name ;
      Write-Output "Modification de $directory en $dir_name effectuée."}
      
      3 {$pathdir = Read-Host "Quel est le chemin du dossier que vous souhaitez supprimer ?" ; 
      $directory = Read-Host "Quel dossier souhaitez-vous supprimer ?" ;
      Remove-Item -Path $pathdir\$directory ;
      Write-Output "Suppression de $directory effectuée"}
      
     # x|X {Write-Host "Retour Menu Précédent" ; menu_action}
      
      Default {Write-Output "Erreur retour au choix" ; gestion_directory}
    }
  
  
  }
  gestion_directory
